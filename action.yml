name: 'Unity Export Crunched Action'
description: 'Export crunched texture assets from Unity project'
author: 'tp-jp'

inputs:
  input-path:
    description: 'Path to input directory'
    required: true
  output-path:
    description: 'Path to output directory'
    required: true
  unity-email:
    description: 'Email for Unity authentication'
    required: true
  unity-password:
    description: 'Password for Unity authentication'
    required: true
  unity-license:
    description: 'Unity license for activation'
    required: true
  unity-version:
    description: 'Unity version'
    default: '2022.3.22f1'
  max-size:
    description: 'Maximum size of texture (pixels)'
    required: false
    default: '2048'
  compression-quality:
    description: 'Compression quality (0-100)'
    required: false
    default: '50'

runs:
  using: 'composite'
  steps:
    - name: Set Local variables
      id: vars
      shell: bash
      run: echo "PROJECT_PATH=unity-export-crunched-action" >> $GITHUB_OUTPUT

    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        path: ${{ steps.vars.outputs.PROJECT_PATH }}

    - name: Copy PNG files to Assets/Input
      shell: bash
      run: |
        mkdir -p ${{ steps.vars.outputs.PROJECT_PATH }}/Assets/Input
        cd ${{ github.workspace }}/${{ inputs.input-path }}
        find . -name "*.png" -type f | while read file; do
          dir=$(dirname "$file")
          mkdir -p "${{ steps.vars.outputs.PROJECT_PATH }}/Assets/Input/$dir"
          cp "$file" "${{ steps.vars.outputs.PROJECT_PATH }}/Assets/Input/$file"
        done
        ls ${{ steps.vars.outputs.PROJECT_PATH }}/Assets/Input
        ls ${{ steps.vars.outputs.PROJECT_PATH }}/Assets/Input/sample

    - name: Cache Unity Library
      uses: actions/cache@v4
      with:
        path: ${{ steps.vars.outputs.PROJECT_PATH }}/Library
        key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
        restore-keys: |
          Library-

    - name: Run the Windows build
      uses: game-ci/unity-builder@v4
      env:
        UNITY_EMAIL: ${{ inputs.unity-email }}
        UNITY_PASSWORD: ${{ inputs.unity-password }}
        UNITY_LICENSE: ${{ inputs.unity-license }}
      with:
        targetPlatform: StandaloneWindows64
        projectPath: ${{ steps.vars.outputs.PROJECT_PATH }}
        unityVersion: ${{ inputs.unity-version }}
        buildMethod: Editor.BuildScript.Build
        customParameters: -inputPath Assets/Input -outputPath /github/workspace/${{ inputs.output-path }} -maxSize ${{ inputs.max-size }} -compressionQuality ${{ inputs.compression-quality }}
        allowDirtyBuild: true
